{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","React","memo","setThisTodoIsOpen","todos","thisTodoIsOpen","className","map","todo","id","completed","classNames","title","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoFilter","setNewTodos","setTodosAreLoaded","useState","query","setQuery","sortCondition","setSortCondition","inputValue","useRef","useEffect","allTodos","filteredTodos","filter","toLowerCase","includes","filterTodos","finally","value","onChange","event","target","placeholder","ref","current","style","pointerEvents","Loader","TodoModal","closeTodoModal","user","setUser","userId","href","email","name","App","todoModal","setTodoModal","setTodos","todosAreLoaded","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.197e2335.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  thisTodoIsOpen: Todo | null;\n  setThisTodoIsOpen: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  setThisTodoIsOpen,\n  todos,\n  thisTodoIsOpen,\n\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setThisTodoIsOpen(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': thisTodoIsOpen?.id !== todo.id,\n                    'fa-eye-slash': thisTodoIsOpen?.id === todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { getTodos } from '../../api';\n\ninterface Props {\n  setNewTodos: (todos: Todo[]) => void;\n  setTodosAreLoaded: (value: boolean) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  setNewTodos,\n  setTodosAreLoaded,\n}) => {\n  const [query, setQuery] = useState('');\n  const [sortCondition, setSortCondition] = useState('all');\n  const inputValue: React.RefObject<HTMLInputElement> | null = useRef(null);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value.toLowerCase());\n  };\n\n  const handleClearInput = () => {\n    setQuery('');\n\n    if (inputValue.current) {\n      inputValue.current.value = '';\n    }\n  };\n\n  const handleFilterSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSortCondition(event.target.value);\n  };\n\n  function filterTodos(allTodos: Todo[]) {\n    let filteredTodos = allTodos;\n\n    if (query) {\n      filteredTodos = filteredTodos.filter(\n        todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n      );\n    }\n\n    if (sortCondition === 'active') {\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n    } else if (sortCondition === 'completed') {\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n    }\n\n    setNewTodos(filteredTodos);\n  }\n\n  useEffect(() => {\n    setTodosAreLoaded(false);\n\n    getTodos()\n      .then(allTodos => {\n        filterTodos(allTodos);\n      })\n      .finally(() => setTodosAreLoaded(true));\n  }, [query, sortCondition]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={sortCondition}\n            onChange={handleFilterSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleInputChange}\n          ref={inputValue}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputValue.current?.value && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo;\n  closeTodoModal: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeTodoModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeTodoModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todoModal, setTodoModal] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosAreLoaded, setTodosAreLoaded] = useState(false);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setNewTodos={setTodos}\n                setTodosAreLoaded={setTodosAreLoaded}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todosAreLoaded ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todos}\n                  thisTodoIsOpen={todoModal}\n                  setThisTodoIsOpen={setTodoModal}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoModal && (\n        <TodoModal\n          todo={todoModal}\n          closeTodoModal={() => setTodoModal(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}